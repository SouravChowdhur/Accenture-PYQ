
bool isPossible(vector<int> boards, int n, int k, int mid){
    int painterCount = 1;
    int paintSum = 0;
    for(int i=0; i<n; i++){
        if(paintSum + boards[i] <= mid){
            paintSum = paintSum + boards[i];
        }
        else{
            painterCount++;
            if(painterCount > k || boards[i] > mid){
                return false;
            }
            paintSum = boards[i];
        }
    }
    return true;
}
int findLargestMinDistance(vector<int> &boards, int k)
{
    //    Write your code here.
    int n = boards.size();
    if (n < k) {
        return -1;
    }
    int ans = -1;
    int s = 0;
    int sum = 0;
    for(int i=0; i<n; i++){
        sum = sum + boards[i];
    }
    int e = sum;
    int mid = s + (e-s)/2;
    while(s <= e){
        if(isPossible(boards, n, k, mid)){
            ans = mid;
            e = mid - 1;
        }
        else{
            s = mid + 1;
        }
        mid = s + (e-s)/2;
    }
    return ans;
}
